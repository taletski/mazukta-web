{"version":3,"sources":["presenters/App/AppPresenter.style.ts","presenters/AppHeader/AppHeaderPresenter.style.ts","presenters/AppHeader/AppHeaderPresenter.tsx","presenters/Button/Button.style.ts","presenters/Button/Button.tsx","presenters/CardsList/CardsListPresenter.style.ts","presenters/Card/CardPresenter.style.tsx","presenters/Avatar/AvatarPresenter.style.tsx","presenters/Avatar/AvatarPresenter.tsx","presenters/Card/CardPresenter.tsx","presenters/CardsList/CardsListPresenter.tsx","helpers/Queue/Queue.ts","services/CreatorService/CreatorService.ts","services/CreatorService/CreatorService.reactAPI.tsx","containers/CardsList/CardsListContainer.tsx","presenters/App/AppPresenter.tsx","containers/App/AppContainer.tsx","App.tsx","theme.ts","index.tsx"],"names":["S","Container","styled","div","theme","background","colors","gradientFrom","gradientTo","Content","main","HeaderContainer","header","CardsContainer","ButtonContainer","MainHeader","h1","text","AppHeaderPresenterComponent","label","AppHeaderPresenter","React","memo","isEqual","Button","button","labelHover","backgroundHover","labelFocus","backgroundFocus","labelActive","backgroundActive","ButtonComponent","props","Card","card","AvatarContainer","TextContainer","TextHeader","h6","TextMessage","p","Avatar","category","avatars","AvatarContent","span","AvatarPresenterComponent","content","AvatarPresenter","CardPresenterComponent","cardCategory","avatarContent","message","CardPresenter","mapCardCategoryToProps","CardsListPresenterComponent","currentElements","cards","Object","values","transitions","useTransition","keys","id","from","opacity","transform","enter","styles","style","CardsListPresenter","Queue","capacity","queue","_capacity","this","element","unshift","length","CreatorService","NUM_OF_LAST_ELEMENTS_NEEDED_FOR_OCCASION","CELLS_QUEUE_CAPACITY","lastDateUsedToGenerateUniqueId","lifeCount","subscribersOnQueueUpdate","Set","queueOfLife","createAddRandomElement","bind","addToQueue","generateRandomCell","occasionCategoryNeedToOccure","getCategoryOfOccasionIfItNeedToOccure","checkIfOccasionPossible","generateOccasionByCategory","handleLifeCount","enqueue","notifySubscribersOnQueueUpdate","forEach","updateState","getData","cellCategory","Math","random","generateCellByCategory","type","lastElementsToCheck","slice","categoryOfLastAddedElement","every","getOccasionCategoryByCellCategory","time","Date","now","last","toString","generateUniqueId","occasionCategory","handleCreateAddRandomCell","callback","add","delete","instance","defaultContext","currentCreatorState","CreatorServiceContext","createContext","getInstance","CreatorServiceProvider","children","useState","setCurrentCreatorState","useEffect","updateStateCallback","newState","subscribeOnUpdates","unsubscribeFromUpdates","Provider","value","useCreatorService","useContext","CardsListContainer","AppPresenterComponent","handleCreateAddElement","onClick","AppPresenter","AppContainer","App","defaultThemeColors","defaultTheme","gradientIntermediate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEaA,EAAI,CACfC,UAAWC,IAAOC,IAAT,6OAQH,qBAAGC,MAAkBC,WAAWC,OAAOC,gBACvC,qBAAGH,MAAkBC,WAAWC,OAAOE,cAG7CC,QAASP,IAAOQ,KAAT,sPAWPC,gBAAiBT,IAAOU,OAAT,oGAKfC,eAAgBX,IAAOC,IAAT,kEAIdW,gBAAiBZ,IAAOC,IAAT,qGCjCJH,EAAI,CACfe,WAAYb,IAAOc,GAAT,mNAKC,qBAAGZ,MAAkBQ,OAAON,OAAOW,S,OCH1CC,EAAkE,SAAC,GAElE,IADLC,EACI,EADJA,MAEA,OAAO,cAAC,EAAEJ,WAAH,UAAeI,KAGXC,EAAqBC,IAAMC,KACtCJ,EACAK,K,eCXWvB,EAAI,CACfwB,OAAQtB,IAAOuB,OAAT,+dAQK,qBAAGrB,MAAkBqB,OAAOnB,OAAOa,SACxB,qBAAGf,MAAkBqB,OAAOnB,OAAOD,cAI5C,qBAAGD,MAAkBqB,OAAOnB,OAAOoB,cACxB,qBAAGtB,MAAkBqB,OAAOnB,OAAOqB,mBAK9C,qBAAGvB,MAAkBqB,OAAOnB,OAAOsB,cACxB,qBAAGxB,MAAkBqB,OAAOnB,OAAOuB,mBAI9C,qBAAGzB,MAAkBqB,OAAOnB,OAAOwB,eACxB,qBAAG1B,MAAkBqB,OAAOnB,OAAOyB,qBCvBvDC,EAEF,SAAC,GAAyB,IAAvBb,EAAsB,EAAtBA,MAAUc,EAAY,yBAC3B,OAAO,cAAC,EAAET,OAAH,2BAAcS,GAAd,aAAsBd,MAGlBK,EAASH,IAAMC,KAAKU,EAAiBT,K,QCTrCvB,EAAI,CACfC,UAAWC,IAAOC,IAAT,qRCDEH,EAAI,CACfkC,KAAMhC,IAAOC,IAAT,2LAQO,qBAAGC,MAAkB+B,KAAK7B,OAAOW,QACtB,qBAAGb,MAAkB+B,KAAK7B,OAAOD,cAEvD+B,gBAAiBlC,IAAOC,IAAT,oGAKfkC,cAAenC,IAAOC,IAAT,oGAKbmC,WAAYpC,IAAOqC,GAAT,+PAWVC,YAAatC,IAAOuC,EAAT,2RChCAzC,EAAI,CACf0C,OAAQxC,IAAOC,IAAT,8RAYA,gBAAGC,EAAH,EAAGA,MAAOuC,EAAV,EAAUA,SAAV,OAAyBvC,EAAMwC,QAAQD,GAAUrC,OAAOC,gBACxD,gBAAGH,EAAH,EAAGA,MAAOuC,EAAV,EAAUA,SAAV,OAAyBvC,EAAMwC,QAAQD,GAAUrC,OAAOE,cAG9DqC,cAAe3C,IAAO4C,KAAT,oDCfTC,EAA4D,SAAC,GAG5D,IAFLJ,EAEI,EAFJA,SACAK,EACI,EADJA,QAEA,OACE,cAAC,EAAEN,OAAH,CAAUC,SAAUA,EAApB,SACE,cAAC,EAAEE,cAAH,UAAkBG,GAAoB,QAK/BC,EAAkB5B,IAAMC,KAAKyB,EAA0BxB,KCV9D2B,EAAwD,SAAC,GAKxD,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,cACAxC,EAEI,EAFJA,OACAyC,EACI,EADJA,QAEA,OACE,eAAC,EAAEnB,KAAH,WACE,cAAC,EAAEE,gBAAH,UACE,cAACa,EAAD,CAAiBN,SAAUQ,EAAcH,QAASI,MAEpD,eAAC,EAAEf,cAAH,WACE,cAAC,EAAEC,WAAH,UAAe1B,IACf,cAAC,EAAE4B,YAAH,UAAgBa,WAMXC,EAAgBjC,IAAMC,KAAK4B,EAAwB3B,KChB1DgC,EAAyB,SAC7BZ,GAEA,OAAQA,GACN,IAAK,aACH,MAAO,CACLQ,aAAcR,EACdS,cAAe,eACfxC,OAAQ,QACRyC,QAAS,iBAEb,IAAK,YACH,MAAO,CACLF,aAAcR,EACdS,cAAe,eACfxC,OAAQ,OACRyC,QAAS,wBAEb,IAAK,eACH,MAAO,CACLF,aAAcR,EACdS,cAAe,eACfxC,OAAQ,OACRyC,QAAS,QAEb,IAAK,gBACH,MAAO,CACLF,aAAcR,EACdS,cAAe,eACfxC,OAAQ,QACRyC,QAAS,mBAKXG,EAAkE,SAAC,GAElE,IADLC,EACI,EADJA,gBAEMC,EAAQC,OAAOC,OAAOH,GACtBI,EAAcC,wBAAcJ,EAAO,CACvCK,KAAM,SAAC5B,GAAD,OAAUA,EAAK6B,IACrBC,KAAM,CAAEC,QAAS,IAAMC,UAAW,0BAClCC,MAAO,CAAEF,QAAS,EAAGC,UAAW,wBAGlC,OACE,cAAC,EAAElE,UAAH,UACG4D,GAAY,SAACQ,EAAQlC,GAAT,OACX,cAAC,WAAShC,IAAV,CAAcmE,MAAOD,EAArB,SACE,cAACf,EAAD,eAAmBC,EAAuBpB,EAAKQ,oBAO5C4B,EAAqBlD,IAAMC,KACtCkC,EACAjC,K,sDCjEWiD,GAAb,WAIE,WAAYC,GAAmB,yBAHvBC,MAAkB,GAGI,KAFtBC,UAAoB,EAG1BC,KAAKD,UAAYF,EALrB,0CAQE,WACE,OAAOG,KAAKD,YAThB,qBAYE,SAAeE,GACbD,KAAKF,MAAMI,QAAQD,GACfD,KAAKF,MAAMK,OAASH,KAAKH,WAC3BG,KAAKF,MAAMK,OAASH,KAAKH,YAf/B,qBAmBE,WACE,OAAOG,KAAKF,UApBhB,KCSaM,GAAb,WAYE,aAAuB,yBAVfC,yCAAmD,EAUrC,KATdC,qBACNN,KAAKK,yCAA2C,GAQ5B,KAPdE,+BAAgD,KAOlC,KANdC,UAAoB,EAMN,KALdC,yBAAqD,IAAIC,IAK3C,KAJdC,YAAyC,IAAIf,GACnDI,KAAKM,sBAILN,KAAKY,uBAAyBZ,KAAKY,uBAAuBC,KAAKb,MAbnE,6DAgBE,WACEA,KAAKc,WAAWd,KAAKe,sBACrB,IAAMC,EAA+BhB,KAAKiB,wCAExCD,GACAhB,KAAKkB,wBAAwBF,KAE7BhB,KAAKc,WACHd,KAAKmB,2BAA2BH,IAElChB,KAAKoB,gBAAgBJ,MA1B3B,wBA8BE,SAAmBf,GACjBD,KAAKW,YAAYU,QAAQpB,GACzBD,KAAKsB,mCAhCT,4CAmCE,WAA0C,IAAD,OACvCtB,KAAKS,yBAAyBc,SAAQ,SAACC,GAAD,OACpCA,EAAY,YAAI,EAAKb,YAAYc,iBArCvC,gCAyCE,WACE,IAAMC,EACJC,KAAKC,SAAW,GAAM,aAAe,YAEvC,OAAO5B,KAAK6B,uBAAuBH,KA7CvC,mDAgDE,WAGE,IAAM5B,EAAQE,KAAKW,YAAYc,UAE/B,KADoB3B,EAAMK,OAEVH,KAAKK,0CACD,aAAlBP,EAAM,GAAGgC,MAFX,CAMA,IAAMC,EAAsB/B,KAAKW,YAC9Bc,UACAO,MAAM,EAAGhC,KAAKK,0CAEX4B,EAA6BnC,EAAM,GAAG/B,SAI5C,OAHyCgE,EAAoBG,OAC3D,SAACjC,GAAD,OAAaA,EAAQlC,WAAakE,KAG3BjC,KAAKmC,kCAAkCF,QADhD,KAnEJ,8BAwEE,WACE,IAAMG,EAAOC,KAAKC,MACZC,EAAOvC,KAAKO,gCAAkC6B,EAEpD,OADApC,KAAKO,+BAAiC6B,EAAOG,EAAOH,EAAOG,EAAO,GAC1DvC,KAAKO,+BAAiCoB,KAAKC,UAAUY,SAAS,MA5E1E,oCA+EE,SAA+BzE,GAC7B,MAAO,CACL+D,KAAM,OACN1C,GAAIY,KAAKyC,mBACT1E,cAnFN,wCAuFE,SAAmCA,GACjC,MAAO,CACL+D,KAAM,WACN1C,GAAIY,KAAKyC,mBACT1E,cA3FN,+CA+FE,SACE2D,GAEA,OAAQA,GACN,IAAK,aACH,MAAO,eACT,IAAK,YACH,MAAO,mBAtGf,qCA0GE,SACEgB,GAEA,OAAQA,GACN,IAAK,eACH,OAAO,EACT,IAAK,gBACH,OAAO1C,KAAKQ,UAAY,KAjHhC,6BAqHE,SAAwBkC,GACtB,OAAQA,GACN,IAAK,eACH1C,KAAKQ,YACL,MACF,IAAK,gBACHR,KAAKQ,eA3Hb,qBAuIE,WACE,OAAOR,KAAKW,YAAYc,YAxI5B,2EA2IE,8EACEzB,KAAK2C,4BADP,gDA3IF,sFA+IE,SAA0BC,GACxB5C,KAAKS,yBAAyBoC,IAAID,KAhJtC,oCAmJE,SAA8BA,GAC5B5C,KAAKS,yBAAyBqC,OAAOF,MApJzC,0BAgIE,WAIE,OAHKxC,EAAe2C,WAClB3C,EAAe2C,SAAW,IAAI3C,GAEzBA,EAAe2C,aApI1B,KAAa3C,GACI2C,SAAkC,KCHnD,IAAMC,GAAiB,CACrBC,oBAAqB,KACrBrC,uBAAwB,MAGpBsC,GAAwBzG,IAAM0G,cAClCH,IAGIpC,GAAyBR,GAAegD,cAC3CxC,uBAEUyC,GAAmC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACVC,mBACpD,IAF8D,mBACzDN,EADyD,KACpCO,EADoC,KAiBhE,OAZAC,qBAAU,WACR,IAAMC,EAAsB,SAACC,GAC3BH,EAAuB,YAAIG,KAK7B,OAFAvD,GAAegD,cAAcQ,mBAAmBF,GAEzC,WACLtD,GAAegD,cAAcS,uBAAuBH,MAErD,IAGD,cAACR,GAAsBY,SAAvB,CACEC,MAAO,CAAEd,sBAAqBrC,2BADhC,SAGG0C,KAKMU,GAAoB,WAE/B,OADgCC,qBAAWf,KC5ChCgB,GAA+B,WAAO,IACzCjB,EAAwBe,KAAxBf,oBAER,OACEA,GACE,cAACtD,EAAD,CAAoBd,gBAAiBoE,KCDrCkB,GAAsD,SAAC,GAEtD,IADLC,EACI,EADJA,uBAEA,OACE,cAAChJ,EAAEC,UAAH,UACE,eAACD,EAAES,QAAH,WACE,cAACT,EAAEW,gBAAH,UACE,cAACS,EAAD,CAAoBD,MAAM,uBAE5B,cAACnB,EAAEa,eAAH,UACE,cAAC,GAAD,MAEF,cAACb,EAAEc,gBAAH,UACE,cAACU,EAAD,CAAQL,MAAM,SAAS8H,QAASD,YAO7BE,GAAe7H,IAAMC,KAAKyH,GAAuBxH,KCxBjD4H,GAAyB,WAAO,IACnC3D,EAA2BoD,KAA3BpD,uBAER,OACE,cAAC0D,GAAD,CAEEF,uBAAwBxD,KCHf4D,GAJH,WACV,OAAO,cAAC,GAAD,KCFHC,GACG,OADHA,GAEG,OAFHA,GAKM,UAaCC,GAA6B,CACxCjJ,WAAY,CACVC,OAAQ,CACNC,aAAc8I,GACd7I,WAnBM,YAuBVI,OAAQ,CACNN,OAAQ,CACNW,KAAMoI,KAIV5H,OAAQ,CACNnB,OAAQ,CACND,WA9BO,UA+BPsB,gBAAiB0H,GACjBxH,gBAAiBwH,GACjBtH,iBA/BkB,UAgClBZ,MAAOkI,GACP3H,WAAY2H,GACZzH,WAAYyH,GACZvH,YAAauH,KAIjBlH,KAAM,CACJ7B,OAAQ,CACND,WAAYgJ,GACZpI,KAAMoI,KAIVzG,QAAS,CACP,aAAc,CACZtC,OAAQ,CACNC,aA9CW,UA+CXC,WA9CM,YAiDV,YAAa,CACXF,OAAQ,CACNC,aAtDC,UAuDDC,WAtDK,YAyDT,eAAgB,CACdF,OAAQ,CACNC,aAxDU,UAyDVC,WAxDO,YA2DX,gBAAiB,CACfF,OAAQ,CACNC,aA5DM,UA6DNgJ,qBA5DO,UA6DP/I,WA5DG,cCTXgJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAetJ,MAAOkJ,GAAtB,SACE,cAAC,GAAD,UACE,cAAC,GAAD,UAINK,SAASC,eAAe,W","file":"static/js/main.fbbb129e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const S = {\n  Container: styled.div`\n    height: 100vh;\n    width: 100vw;\n    box-sizing: border-box;\n    padding-left: 30px;\n    padding-right: 30px;\n    background: linear-gradient(\n      to top,\n      ${({ theme }) => theme.background.colors.gradientFrom} 0%,\n      ${({ theme }) => theme.background.colors.gradientTo} 100%\n    );\n  `,\n  Content: styled.main`\n    display: flex;\n    flex-direction: column;\n    justify-content: stretch;\n    align-items: stretch;\n    height: 100%;\n    width: 100%;\n    max-width: 378px;\n    margin-left: auto;\n    margin-right: auto;\n  `,\n  HeaderContainer: styled.header`\n    flex: 0 0 40px;\n    margin-top: 16px;\n    margin-bottom: 22px;\n  `,\n  CardsContainer: styled.div`\n    flex: 1 1;\n    min-height: 0;\n  `,\n  ButtonContainer: styled.div`\n    flex: 0 0 35px;\n    margin-top: 16px;\n    margin-bottom: 16px;\n  `,\n};\n","import styled from \"styled-components\";\n\nexport const S = {\n  MainHeader: styled.h1`\n    font-size: 20px;\n    line-height: 28px;\n    font-weight: 500;\n    letter-spacing: 0.0015em;\n    color: ${({ theme }) => theme.header.colors.text};\n\n    width: 100%;\n    height: 100%;\n    text-align: center;\n  `,\n};\n","import React from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport { IAppHeaderPresenterProps } from \"./AppHeaderPresenter.type\";\nimport { S } from \"./AppHeaderPresenter.style\";\n\nconst AppHeaderPresenterComponent: React.FC<IAppHeaderPresenterProps> = ({\n  label,\n}) => {\n  return <S.MainHeader>{label}</S.MainHeader>;\n};\n\nexport const AppHeaderPresenter = React.memo(\n  AppHeaderPresenterComponent,\n  isEqual\n);\n","import styled from \"styled-components\";\n\nexport const S = {\n  Button: styled.button`\n    font-size: 14px;\n    line-height: 14.56px;\n    font-style: normal;\n    width: 100%;\n    height: 36px;\n    border-radius: 4px;\n\n    color: ${({ theme }) => theme.button.colors.label};\n    background-color: ${({ theme }) => theme.button.colors.background};\n\n    &:hover {\n      cursor: pointer;\n      color: ${({ theme }) => theme.button.colors.labelHover};\n      background-color: ${({ theme }) => theme.button.colors.backgroundHover};\n    }\n\n    &:focus {\n      outline: none;\n      color: ${({ theme }) => theme.button.colors.labelFocus};\n      background-color: ${({ theme }) => theme.button.colors.backgroundFocus};\n    }\n\n    &:active {\n      color: ${({ theme }) => theme.button.colors.labelActive};\n      background-color: ${({ theme }) => theme.button.colors.backgroundActive};\n    }\n  `,\n};\n","import React from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport { ButtonProps } from \"./Button.type\";\nimport { S } from \"./Button.style\";\n\nconst ButtonComponent: React.FC<\n  ButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>\n> = ({ label, ...props }) => {\n  return <S.Button {...props}>{label}</S.Button>;\n};\n\nexport const Button = React.memo(ButtonComponent, isEqual);\n","import styled from \"styled-components\";\n\nexport const S = {\n  Container: styled.div`\n    display: flex;\n    flex-direction: column-reverse;\n    align-items: stretch;\n    height: 100%;\n    width: 100%;\n    overflow-y: hidden;\n    overflow-x: hidden;\n\n    & > div {\n      margin-top: 2px;\n      margin-bottom: 2px;\n    }\n  `,\n};\n","import styled from \"styled-components\";\n\nexport const S = {\n  Card: styled.div`\n    display: flex;\n    align-items: center;\n\n    width: 100%;\n    height: 76px;\n    border-radius: 8px;\n\n    color: ${({ theme }) => theme.card.colors.text};\n    background-color: ${({ theme }) => theme.card.colors.background};\n  `,\n  AvatarContainer: styled.div`\n    flex: 0 0 auto;\n    margin-right: 16px;\n    margin-left: 16px;\n  `,\n  TextContainer: styled.div`\n    flex: 1 1 256px;\n    height: 100%;\n    box-sizing: border-box;\n  `,\n  TextHeader: styled.h6`\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 28px;\n    letter-spacing: 0.0015em;\n    margin-top: 16px;\n    margin-bottom: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `,\n  TextMessage: styled.p`\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.0025em;\n    margin-top: 0;\n    margin-right: 15px;\n    margin-bottom: 9px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `,\n};\n","import styled from \"styled-components\";\nimport { IAvatarPresenterProps } from \"./AvatarPresenter.type\";\n\nexport const S = {\n  Avatar: styled.div<IAvatarPresenterProps>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    font-size: 20px;\n    width: 40px;\n    height: 40px;\n    border-radius: 20px;\n\n    background: linear-gradient(\n      to bottom,\n      ${({ theme, category }) => theme.avatars[category].colors.gradientFrom} 0%,\n      ${({ theme, category }) => theme.avatars[category].colors.gradientTo} 100%\n    );\n  `,\n  AvatarContent: styled.span`\n    display: block;\n  `,\n};\n","import React from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport { IAvatarPresenterProps } from \"./AvatarPresenter.type\";\nimport { S } from \"./AvatarPresenter.style\";\n\nconst AvatarPresenterComponent: React.FC<IAvatarPresenterProps> = ({\n  category,\n  content,\n}) => {\n  return (\n    <S.Avatar category={category}>\n      <S.AvatarContent>{content ? content : \"\"}</S.AvatarContent>\n    </S.Avatar>\n  );\n};\n\nexport const AvatarPresenter = React.memo(AvatarPresenterComponent, isEqual);\n","import React from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport { ICardPresenterProps } from \"./CardPresenter.type\";\nimport { S } from \"./CardPresenter.style\";\nimport { AvatarPresenter } from \"../Avatar/AvatarPresenter\";\n\nconst CardPresenterComponent: React.FC<ICardPresenterProps> = ({\n  cardCategory,\n  avatarContent,\n  header,\n  message,\n}) => {\n  return (\n    <S.Card>\n      <S.AvatarContainer>\n        <AvatarPresenter category={cardCategory} content={avatarContent} />\n      </S.AvatarContainer>\n      <S.TextContainer>\n        <S.TextHeader>{header}</S.TextHeader>\n        <S.TextMessage>{message}</S.TextMessage>\n      </S.TextContainer>\n    </S.Card>\n  );\n};\n\nexport const CardPresenter = React.memo(CardPresenterComponent, isEqual);\n","import React from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport { useTransition, animated } from \"react-spring\";\nimport { ICardsListPresenterProps } from \"../../containers/CardsList/CardsListContainer.type\";\nimport { S } from \"./CardsListPresenter.style\";\nimport { CardPresenter } from \"../Card/CardPresenter\";\nimport { CardCategory } from \"../../services/CreatorService/CreatorService.type\";\nimport { ICardPresenterProps } from \"../Card/CardPresenter.type\";\n\nconst mapCardCategoryToProps = (\n  category: CardCategory\n): ICardPresenterProps => {\n  switch (category) {\n    case \"alive-cell\":\n      return {\n        cardCategory: category,\n        avatarContent: \"🐣\",\n        header: \"Alive\",\n        message: \"And it moves!\",\n      };\n    case \"dead-cell\":\n      return {\n        cardCategory: category,\n        avatarContent: \"💀\",\n        header: \"Dead\",\n        message: \"Or pretends to be...\",\n      };\n    case \"life-occured\":\n      return {\n        cardCategory: category,\n        avatarContent: \"💥\",\n        header: \"Life\",\n        message: \"Hey!\",\n      };\n    case \"death-occured\":\n      return {\n        cardCategory: category,\n        avatarContent: \"🥀\",\n        header: \"Death\",\n        message: \"Rest in peace\",\n      };\n  }\n};\n\nconst CardsListPresenterComponent: React.FC<ICardsListPresenterProps> = ({\n  currentElements,\n}) => {\n  const cards = Object.values(currentElements);\n  const transitions = useTransition(cards, {\n    keys: (card) => card.id,\n    from: { opacity: 0.01, transform: \"translate3d(200px,0,0)\" },\n    enter: { opacity: 1, transform: \"translate3d(0,0,0)\" },\n  });\n\n  return (\n    <S.Container>\n      {transitions((styles, card) => (\n        <animated.div style={styles}>\n          <CardPresenter {...mapCardCategoryToProps(card.category)} />\n        </animated.div>\n      ))}\n    </S.Container>\n  );\n};\n\nexport const CardsListPresenter = React.memo(\n  CardsListPresenterComponent,\n  isEqual\n);\n","import { IQueue } from \"./Queue.type\";\n\nexport class Queue<T> implements IQueue<T> {\n  private queue: Array<T> = [];\n  private _capacity: number = 0;\n\n  constructor(capacity: number) {\n    this._capacity = capacity;\n  }\n\n  public get capacity() {\n    return this._capacity;\n  }\n\n  public enqueue(element: T) {\n    this.queue.unshift(element);\n    if (this.queue.length > this.capacity) {\n      this.queue.length = this.capacity;\n    }\n  }\n\n  public getData() {\n    return this.queue;\n  }\n}\n","import { Queue } from \"../../helpers/Queue/Queue\";\nimport { IQueue } from \"../../helpers/Queue/Queue.type\";\nimport {\n  ICell,\n  ICreatorService,\n  IOccasion,\n  TCellCategory,\n  TOccasionCategory,\n  UpdateStateCallback,\n} from \"./CreatorService.type\";\n\nexport class CreatorService implements ICreatorService {\n  private static instance: CreatorService | null = null;\n  private NUM_OF_LAST_ELEMENTS_NEEDED_FOR_OCCASION: number = 3;\n  private CELLS_QUEUE_CAPACITY: number =\n    this.NUM_OF_LAST_ELEMENTS_NEEDED_FOR_OCCASION + 10; // to populate the whole screen vertically\n  private lastDateUsedToGenerateUniqueId: number | null = null;\n  private lifeCount: number = 0;\n  private subscribersOnQueueUpdate: Set<UpdateStateCallback> = new Set<UpdateStateCallback>();\n  private queueOfLife: IQueue<ICell | IOccasion> = new Queue<ICell | IOccasion>(\n    this.CELLS_QUEUE_CAPACITY\n  );\n\n  private constructor() {\n    this.createAddRandomElement = this.createAddRandomElement.bind(this);\n  }\n\n  private handleCreateAddRandomCell() {\n    this.addToQueue(this.generateRandomCell());\n    const occasionCategoryNeedToOccure = this.getCategoryOfOccasionIfItNeedToOccure();\n    if (\n      occasionCategoryNeedToOccure &&\n      this.checkIfOccasionPossible(occasionCategoryNeedToOccure)\n    ) {\n      this.addToQueue(\n        this.generateOccasionByCategory(occasionCategoryNeedToOccure)\n      );\n      this.handleLifeCount(occasionCategoryNeedToOccure);\n    }\n  }\n\n  private addToQueue(element: ICell | IOccasion) {\n    this.queueOfLife.enqueue(element);\n    this.notifySubscribersOnQueueUpdate();\n  }\n\n  private notifySubscribersOnQueueUpdate() {\n    this.subscribersOnQueueUpdate.forEach((updateState) =>\n      updateState([...this.queueOfLife.getData()])\n    );\n  }\n\n  private generateRandomCell(): ICell {\n    const cellCategory: TCellCategory =\n      Math.random() < 0.5 ? \"alive-cell\" : \"dead-cell\";\n\n    return this.generateCellByCategory(cellCategory);\n  }\n\n  private getCategoryOfOccasionIfItNeedToOccure():\n    | TOccasionCategory\n    | undefined {\n    const queue = this.queueOfLife.getData();\n    const queueLength = queue.length;\n    if (\n      queueLength < this.NUM_OF_LAST_ELEMENTS_NEEDED_FOR_OCCASION ||\n      queue[0].type === \"occasion\"\n    ) {\n      return;\n    }\n    const lastElementsToCheck = this.queueOfLife\n      .getData()\n      .slice(0, this.NUM_OF_LAST_ELEMENTS_NEEDED_FOR_OCCASION);\n\n    const categoryOfLastAddedElement = queue[0].category;\n    const lastElementsAreOfTheSameCategory = lastElementsToCheck.every(\n      (element) => element.category === categoryOfLastAddedElement\n    );\n    if (lastElementsAreOfTheSameCategory) {\n      return this.getOccasionCategoryByCellCategory(categoryOfLastAddedElement);\n    }\n  }\n\n  private generateUniqueId() {\n    const time = Date.now();\n    const last = this.lastDateUsedToGenerateUniqueId || time;\n    this.lastDateUsedToGenerateUniqueId = time > last ? time : last + 1;\n    return (this.lastDateUsedToGenerateUniqueId + Math.random()).toString(32);\n  }\n\n  private generateCellByCategory(category: TCellCategory): ICell {\n    return {\n      type: \"cell\",\n      id: this.generateUniqueId(),\n      category,\n    };\n  }\n\n  private generateOccasionByCategory(category: TOccasionCategory): IOccasion {\n    return {\n      type: \"occasion\",\n      id: this.generateUniqueId(),\n      category,\n    };\n  }\n\n  private getOccasionCategoryByCellCategory(\n    cellCategory: TCellCategory\n  ): TOccasionCategory {\n    switch (cellCategory) {\n      case \"alive-cell\":\n        return \"life-occured\";\n      case \"dead-cell\":\n        return \"death-occured\";\n    }\n  }\n\n  private checkIfOccasionPossible(\n    occasionCategory: TOccasionCategory\n  ): boolean {\n    switch (occasionCategory) {\n      case \"life-occured\":\n        return true;\n      case \"death-occured\":\n        return this.lifeCount > 0;\n    }\n  }\n\n  private handleLifeCount(occasionCategory: TOccasionCategory): void {\n    switch (occasionCategory) {\n      case \"life-occured\":\n        this.lifeCount++;\n        break;\n      case \"death-occured\":\n        this.lifeCount--;\n        break;\n    }\n  }\n\n  public static getInstance() {\n    if (!CreatorService.instance) {\n      CreatorService.instance = new CreatorService();\n    }\n    return CreatorService.instance;\n  }\n\n  public get creations() {\n    return this.queueOfLife.getData();\n  }\n\n  public async createAddRandomElement() {\n    this.handleCreateAddRandomCell();\n  }\n\n  public subscribeOnUpdates(callback: UpdateStateCallback) {\n    this.subscribersOnQueueUpdate.add(callback);\n  }\n\n  public unsubscribeFromUpdates(callback: UpdateStateCallback) {\n    this.subscribersOnQueueUpdate.delete(callback);\n  }\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { CreatorService } from \"./CreatorService\";\nimport { CreatorState } from \"./CreatorService.type\";\n\ninterface ICreatorServiceContext {\n  currentCreatorState: CreatorState | null;\n  createAddRandomElement: (() => Promise<void>) | null;\n}\n\nconst defaultContext = {\n  currentCreatorState: null,\n  createAddRandomElement: null,\n};\n\nconst CreatorServiceContext = React.createContext<ICreatorServiceContext>(\n  defaultContext\n);\n\nconst createAddRandomElement = CreatorService.getInstance()\n  .createAddRandomElement;\n\nexport const CreatorServiceProvider: React.FC = ({ children }) => {\n  const [currentCreatorState, setCurrentCreatorState] = useState<CreatorState>(\n    []\n  );\n\n  useEffect(() => {\n    const updateStateCallback = (newState: CreatorState) => {\n      setCurrentCreatorState([...newState]);\n    };\n\n    CreatorService.getInstance().subscribeOnUpdates(updateStateCallback);\n\n    return () => {\n      CreatorService.getInstance().unsubscribeFromUpdates(updateStateCallback);\n    };\n  }, []);\n\n  return (\n    <CreatorServiceContext.Provider\n      value={{ currentCreatorState, createAddRandomElement }}\n    >\n      {children}\n    </CreatorServiceContext.Provider>\n  );\n};\n\nexport const useCreatorService = (): ICreatorServiceContext => {\n  const contextFieldsAndMethods = useContext(CreatorServiceContext);\n  return contextFieldsAndMethods;\n};\n","import React from \"react\";\nimport { CardsListPresenter } from \"../../presenters/CardsList/CardsListPresenter\";\nimport { useCreatorService } from \"../../services/CreatorService/CreatorService.reactAPI\";\n\nexport const CardsListContainer: React.FC = () => {\n  const { currentCreatorState } = useCreatorService();\n\n  return (\n    currentCreatorState && (\n      <CardsListPresenter currentElements={currentCreatorState} />\n    )\n  );\n};\n","import React from \"react\";\nimport isEqual from \"lodash.isequal\";\nimport { IAppPresenterProps } from \"../../containers/App/AppContainer.type\";\nimport { S } from \"./AppPresenter.style\";\nimport { AppHeaderPresenter } from \"../AppHeader/AppHeaderPresenter\";\nimport { Button } from \"../Button/Button\";\nimport { CardsListContainer } from \"../../containers/CardsList/CardsListContainer\";\n\nconst AppPresenterComponent: React.FC<IAppPresenterProps> = ({\n  handleCreateAddElement,\n}) => {\n  return (\n    <S.Container>\n      <S.Content>\n        <S.HeaderContainer>\n          <AppHeaderPresenter label=\"Cells Playground\" />\n        </S.HeaderContainer>\n        <S.CardsContainer>\n          <CardsListContainer />\n        </S.CardsContainer>\n        <S.ButtonContainer>\n          <Button label=\"Create\" onClick={handleCreateAddElement} />\n        </S.ButtonContainer>\n      </S.Content>\n    </S.Container>\n  );\n};\n\nexport const AppPresenter = React.memo(AppPresenterComponent, isEqual);\n","import React from \"react\";\nimport { AppPresenter } from \"../../presenters/App/AppPresenter\";\nimport { useCreatorService } from \"../../services/CreatorService/CreatorService.reactAPI\";\n\nexport const AppContainer: React.FC = () => {\n  const { createAddRandomElement } = useCreatorService();\n\n  return (\n    <AppPresenter\n      // have to specify types explicitly because Typescript doesn't handle React Context\n      handleCreateAddElement={createAddRandomElement as () => Promise<void>}\n    />\n  );\n};\n","import React from \"react\";\nimport { AppContainer } from \"./containers/App/AppContainer\";\n\nconst App = () => {\n  return <AppContainer />;\n};\n\nexport default App;\n","import { DefaultTheme } from \"styled-components\";\n\nconst defaultThemeColors = {\n  white: \"#fff\",\n  black: \"#000\",\n  ripePlum: \"#310050\",\n  bossanova: \"#5A3472\",\n  eminence: \"#613B79\",\n  darkerBossanovaShade: \"#542865\",\n  atoll: \"#0D658A\",\n  mintGreen: \"#B0FFB4\",\n  selectiveYellow: \"#FFB800\",\n  buttermilk: \"#FFF7B0\",\n  electricViolet: \"#AD00FF\",\n  cottonCandy: \"#FFB0E9\",\n  gableGreen: \"#0F2027\",\n  tePapaGreen: \"#203A43\",\n  sanJuan: \"#2C5364\",\n};\n\nexport const defaultTheme: DefaultTheme = {\n  background: {\n    colors: {\n      gradientFrom: defaultThemeColors.black,\n      gradientTo: defaultThemeColors.ripePlum,\n    },\n  },\n\n  header: {\n    colors: {\n      text: defaultThemeColors.white,\n    },\n  },\n\n  button: {\n    colors: {\n      background: defaultThemeColors.bossanova,\n      backgroundHover: defaultThemeColors.eminence,\n      backgroundFocus: defaultThemeColors.eminence,\n      backgroundActive: defaultThemeColors.darkerBossanovaShade,\n      label: defaultThemeColors.white,\n      labelHover: defaultThemeColors.white,\n      labelFocus: defaultThemeColors.white,\n      labelActive: defaultThemeColors.white,\n    },\n  },\n\n  card: {\n    colors: {\n      background: defaultThemeColors.white,\n      text: defaultThemeColors.black,\n    },\n  },\n\n  avatars: {\n    \"alive-cell\": {\n      colors: {\n        gradientFrom: defaultThemeColors.selectiveYellow,\n        gradientTo: defaultThemeColors.buttermilk,\n      },\n    },\n    \"dead-cell\": {\n      colors: {\n        gradientFrom: defaultThemeColors.atoll,\n        gradientTo: defaultThemeColors.mintGreen,\n      },\n    },\n    \"life-occured\": {\n      colors: {\n        gradientFrom: defaultThemeColors.electricViolet,\n        gradientTo: defaultThemeColors.cottonCandy,\n      },\n    },\n    \"death-occured\": {\n      colors: {\n        gradientFrom: defaultThemeColors.gableGreen,\n        gradientIntermediate: defaultThemeColors.tePapaGreen,\n        gradientTo: defaultThemeColors.sanJuan,\n      },\n    },\n  },\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"styled-components\";\nimport { defaultTheme } from \"./theme\";\nimport { CreatorServiceProvider } from \"services/CreatorService/CreatorService.reactAPI\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={defaultTheme}>\n      <CreatorServiceProvider>\n        <App />\n      </CreatorServiceProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}